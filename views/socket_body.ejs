
<section id="enregistrement">
    <h2>Enregistrez votre nom</h2>
    <input id="ZoneNom" type="text">
    <button id="boutonEnr" onclick="enregistrement()">Enregistrer</button>
</section>
<button id="boutonDel" onclick="deconnection()">Deconnection</button>


<section class="chat">
    <h2 id="utilisateur"></h1>
    <div id="list_user">
        <h2 id="uActif">Utilisateurs actifs</h1>
    </div>
    <section id="message">
        <input type="text" id="texteMessage" name="txtMessage">
        <button onclick="transmettre()">Transmettre</button>
    </section>
</section>

<script type="text/javascript">
    /* 
    Pour établir une communication socket il faut un premier appel de
    la fonction io()
    Cette fonction est incluse dans la librairie socket.io. 
    Cette fonction déclenche un événement connect vers le serveur
    */
    window.onload = ()=>{
        socket = io.connect()
        console.log(socket.id);
        socket.on('connect', function(){
            console.log('Le socket id = ' + socket.id); 
            /* l'événement ackUser a été transmis par le serveur */ 
            socket.on('valid_user', function(data){
                console.log('data en provenance du serveur = ' + data.user)
            })

            socket.on('NouvelUtilisateur', function(data){
                ajouter(data.user, data.id);
            })
            socket.on("nouveauMessage", function(data, couleur) {
                ajouterMessage(data.user, data.message, couleur);
            })
            socket.on("deconnection", function(data) {
                ajouterMessage(data.nom, data.message);
                cacherUser(data.id)
            })
        });
    }
    /* ---------------------------------------------------------- */
    function enregistrement(){
        var elmUser = document.querySelector('#enregistrement input');
        console.log(elmUser.value);
        socket.nom = elmUser.value;
        var user = document.getElementById("utilisateur");
        console.log(user);
        user.innerHTML = "Utilisateur actif : " + elmUser.value;
        var section = document.getElementById("enregistrement");
        section.style.display = "none";
        /* l'événement « setUser » est transmit avec un objet 
        */
        socket.emit('ajouterUtilisateur', {user : elmUser.value, id : socket.id})
    }

    function deconnection() {
        socket.emit("deconnection", {id:socket.id, nom:socket.nom})
    }

    function transmettre() {
        var elmUser = document.querySelector("#enregistrement input");
        var message = document.querySelector("#message input");

        console.log(message.value);

        socket.emit("ajouterMessage", {user:elmUser.value, message:message.value})
    }

    function ajouter(personne, id) {
        var user = document.getElementById("utilisateur");
        var listUser = document.createElement("p");
        listUser.innerHTML = personne;

        var element = document.getElementById("list_user");
        var element2 = document.getElementById("chat");
        
        var nomUser = element.appendChild(listUser);
        nomUser.setAttribute("class", id);
    }


    function ajouterMessage(user, message, couleur) {
        var messageTxt = document.createElement("p");
        messageTxt.innerHTML = user + " - " + message;
        var element = document.getElementById("message");
        element.appendChild(messageTxt);
        messageTxt.style.backgroundColor = couleur;
    }

    function cacherUser(id) {
        var pUser = document.getElementsByClassName(id);
        console.log(pUser);
        pUser[0].parentNode.removeChild(pUser[0]);
        pUser[0].parentNode.removeChild(pUser[0]);
        var login = document.getElementById("uActif");
        login.style.display = "none";
    }

</script>